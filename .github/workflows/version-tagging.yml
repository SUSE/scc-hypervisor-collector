name: scc-hypervisor-collector version tagging

on:
  pull_request:
    types:
      - closed

jobs:
  bumpversion_if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - name: Install package dependencies
      run: |
        #sudo apt-get update
        sudo apt-get install bumpversion

    - name: Checkout repo to workspace (full clone)
      uses: actions/checkout@v3
      with:
        fetch-depth: '0'

    - name: Determine if version already bumped
      id: check_if_version_bumped_in_pr
      run: |
        echo Check if version changed relative to ${{ github.ref }}
        git diff ${{ github.ref }} -- src/scc_hypervisor_collector/__init__.py
        if git diff ${{ github.ref }} -- src/scc_hypervisor_collector/__init__.py | grep -sq "^[+]__version__"; then
          bumped_in_pr=true
        else
          bumped_in_pr=false
        fi
        bumped_in_pr=$(git diff ${{ github.ref }} -- src/scc_hypervisor_collector/__init__.py | grep -sq "^[+]__version__" && echo true || echo false)
        echo "bumped_in_pr=${bumped_in_pr}"
        echo "bumped_in_pr=${bumped_in_pr}" >> ${GITHUB_OUTPUT}

    - name: Configure git
      run: |
        git config --local user.name 'Version Bumping Bot'
        git config --local user.email ''

    - name: Bump patch if version isn't already being bumped
      if: steps.check_if_version_bumped_in_pr.outputs.bumped_in_pr == 'false'
      run: |
        bumpversion patch
        git push

    - name: Create tag for bumped version
      run: |
        tag_prefix="f"
        prev_version=$(git describe --tags --abbrev=0 | tr -d "${tag_prefix}")
        new_version=$(grep -e "^__version__[[:space:]]*=[[:space:]]*" src/scc_hypervisor_collector/__init__.py | cut -d= -f2 | tr -d "[:space:]'")
        git tag -m "Bump version: ${prev_version} â†’ ${new_version}" ${tag_prefix}${new_version}
        git push --tags

